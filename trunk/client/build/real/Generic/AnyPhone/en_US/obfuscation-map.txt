app.App -> app.App:
    control.Controller controller -> controller
    void startApp() -> startApp
    void pauseApp() -> pauseApp
    void destroyApp(boolean) -> destroyApp
    void exit() -> exit
control.Controller -> al:
    app.App midlet -> a
    de.enough.polish.ui.Display display -> a
    model.Configuration configuration -> a
    de.enough.polish.io.RmsStorage storage -> a
    de.enough.polish.ui.Command cmdExit -> a
    de.enough.polish.ui.Command cmdBack -> b
    view.MainMenuList screenMainMenu -> a
    de.enough.polish.ui.SimpleScreenHistory screenHistory -> a
    void appStart() -> a
    void appPause() -> b
    void appContinue() -> c
    void initApp() -> d
    view.MainMenuList createMainMenu() -> a
    model.Configuration configurationLoad() -> a
    boolean configurationSave() -> a
    void commandAction(de.enough.polish.ui.Command,de.enough.polish.ui.Displayable) -> a
    boolean handleCommandMainMenu() -> b
de.enough.polish.io.Externalizable -> av:
    void write(java.io.DataOutputStream) -> a
    void read(java.io.DataInputStream) -> a
de.enough.polish.io.RmsStorage -> m:
    javax.microedition.rms.RecordStore masterRecordStore -> a
    de.enough.polish.util.HashMap masterRecordSetIdsByName -> a
    de.enough.polish.util.HashMap masterRecordSetNameById -> b
    int indexRecordId -> a
    boolean isClosed -> a
    java.lang.String mastRecordStoreName -> a
    de.enough.polish.util.ArrayList masterRecordStores -> a
    int getRecordSetId(java.lang.String) -> a
    void registerRecordSetId(int,java.lang.String) -> a
    void save(java.lang.Object,java.lang.String) -> a
    void saveData(java.lang.String,byte[]) -> a
    void saveData(java.lang.String,java.lang.String,byte[]) -> a
    java.lang.Object read(java.lang.String) -> a
    void ensureOpen() -> a
de.enough.polish.io.Serializer -> i:
    void serialize(java.lang.Object,java.io.DataOutputStream) -> a
    java.lang.Object deserialize(java.io.DataInputStream) -> a
de.enough.polish.midp.ui.NativeDisplayImpl -> s:
    javax.microedition.lcdui.Display display -> a
    void callSerially(java.lang.Runnable) -> a
    boolean flashBacklight(int) -> a
    int getColor(int) -> a
    void setCurrent(de.enough.polish.ui.Display) -> a
    void setCurrent(de.enough.polish.ui.Displayable) -> a
    void setCurrentNative(javax.microedition.lcdui.Displayable) -> a
    de.enough.polish.midp.ui.NativeDisplayImpl getDisplay(javax.microedition.midlet.MIDlet) -> a
de.enough.polish.ui.Alert -> ad:
    de.enough.polish.ui.Command DISMISS_COMMAND -> a
    int timeout -> r
    long showTime -> d
    de.enough.polish.ui.IconItem iconItem -> a
    de.enough.polish.ui.Gauge indicator -> a
    de.enough.polish.ui.Displayable nextDisplayable -> a
    int numberOfCommands -> s
    de.enough.polish.ui.Style contentStyle -> b
    void addCommand(de.enough.polish.ui.Command) -> a
    void removeCommand(de.enough.polish.ui.Command) -> b
    void setCommandListener(de.enough.polish.ui.CommandListener) -> a
    void createItem(java.lang.String,javax.microedition.lcdui.Image,de.enough.polish.ui.Style) -> a
    void setString(java.lang.String) -> a
    void setString(java.lang.String,de.enough.polish.ui.Style) -> a
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    void commandAction(de.enough.polish.ui.Command,de.enough.polish.ui.Displayable) -> a
    void showNotify() -> a
    void setStyle(de.enough.polish.ui.Style) -> a
de.enough.polish.ui.Animatable -> h:
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
de.enough.polish.ui.AnimationThread -> ag:
    boolean releaseResourcesOnScreenChange -> a
    de.enough.polish.util.ArrayList animationList -> a
    long totalDelta -> a
    void run() -> run
    void addAnimationItem(de.enough.polish.ui.Animatable) -> a
    void removeAnimationItem(de.enough.polish.ui.Animatable) -> b
de.enough.polish.ui.Background -> r:
    int borderWidth -> a
    void animate(de.enough.polish.ui.Screen,de.enough.polish.ui.Item,long,de.enough.polish.ui.ClippingRegion) -> a
    void addRelativeToBackgroundRegion(de.enough.polish.ui.ClippingRegion,de.enough.polish.ui.Screen,de.enough.polish.ui.Item,int,int,int,int) -> a
    boolean animate() -> a
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void releaseResources() -> a
    void hideNotify() -> b
    void showNotify() -> c
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.Border -> br:
    int borderWidthTop -> a
    int borderWidthBottom -> b
    int borderWidthLeft -> c
    int borderWidthRight -> d
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void animate(de.enough.polish.ui.Screen,de.enough.polish.ui.Item,long,de.enough.polish.ui.ClippingRegion) -> a
    boolean animate() -> a
    void hideNotify() -> a
    void showNotify() -> b
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.Canvas -> at:
    de.enough.polish.ui.CommandListener _commandListener -> a
    boolean _isShown -> f
    de.enough.polish.util.IdentityArrayList _commands -> a
    java.lang.String _title -> a
    int getGameAction(int) -> a
    void setFullScreenMode(boolean) -> a
    void keyPressed(int) -> a
    void keyRepeated(int) -> b
    void keyReleased(int) -> c
    void pointerPressed(int,int) -> c
    void pointerReleased(int,int) -> d
    void pointerDragged(int,int) -> e
    boolean _keyPressed(int) -> a
    boolean _keyRepeated(int) -> b
    boolean _keyReleased(int) -> c
    boolean _pointerPressed(int,int) -> d
    boolean _pointerReleased(int,int) -> f
    boolean _pointerDragged(int,int) -> e
    void repaint(de.enough.polish.ui.ClippingRegion) -> a
    void repaint() -> g
    void serviceRepaints() -> h
    void _showNotify() -> i
    void _hideNotify() -> j
    void _hideNotifyExternal() -> k
    void showNotify() -> a
    void hideNotify() -> d
    void hideNotifyExternal() -> l
    void paint(javax.microedition.lcdui.Graphics) -> a
    void sizeChanged(int,int) -> a
    boolean isShown() -> c
    int getWidth() -> g
    int getHeight() -> h
    void setCommandListener(de.enough.polish.ui.CommandListener) -> a
    void addCommand(de.enough.polish.ui.Command) -> a
    void removeCommand(de.enough.polish.ui.Command) -> b
    void setTitle(java.lang.String) -> b
    java.lang.String getTitle() -> a
de.enough.polish.ui.ChoiceGroup -> ap:
    de.enough.polish.ui.Command MARK_COMMAND -> a
    de.enough.polish.ui.Command UNMARK_COMMAND -> b
    int selectedIndex -> P
    boolean isMultiple -> e
    int choiceType -> h
    boolean isImplicit -> f
    de.enough.polish.ui.Command selectCommand -> c
    de.enough.polish.ui.ItemCommandListener additionalItemCommandListener -> b
    boolean isPointerReleaseShouldTriggerKeyRelease -> q
    de.enough.polish.ui.ChoiceItem[] buildChoiceItems(java.lang.String[],javax.microedition.lcdui.Image[],int,de.enough.polish.ui.Style) -> a
    de.enough.polish.ui.ChoiceItem getItem(int) -> a
    int append(de.enough.polish.ui.ChoiceItem) -> a
    int append(de.enough.polish.ui.ChoiceItem,de.enough.polish.ui.Style) -> a
    void setSelectedIndex(int,boolean) -> b
    boolean handleKeyPressed(int,int) -> a
    void selectChoiceItem(de.enough.polish.ui.ChoiceItem,boolean) -> a
    boolean handleKeyReleased(int,int) -> b
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerReleased(int,int) -> d
    void setDefaultCommand(de.enough.polish.ui.Command) -> c
    void setStyleWithBackground(de.enough.polish.ui.Style,boolean) -> b
    void commandAction(de.enough.polish.ui.Command,de.enough.polish.ui.Item) -> a
    boolean handleCommand(de.enough.polish.ui.Command) -> a_
    void setItemCommandListener(de.enough.polish.ui.ItemCommandListener) -> a
de.enough.polish.ui.ChoiceItem -> g:
    javax.microedition.lcdui.Image defaultRadioSelected -> b
    javax.microedition.lcdui.Image defaultRadioPlain -> c
    javax.microedition.lcdui.Image defaultCheckSelected -> d
    javax.microedition.lcdui.Image defaultCheckPlain -> e
    boolean isMultiple -> e
    javax.microedition.lcdui.Image selected -> f
    javax.microedition.lcdui.Image plain -> g
    boolean isSelected -> a
    javax.microedition.lcdui.Image boxImage -> h
    int boxWidth -> h
    int yAdjust -> P
    boolean drawBox -> c
    int choiceType -> Q
    int boxColor -> R
    boolean drawNoPlain -> f
    boolean drawNoSelected -> q
    int yBoxAdjust -> S
    void initContent(int,int,int) -> a
    void initContentImpl(int,int,int) -> c
    javax.microedition.lcdui.Image createSelected() -> a
    javax.microedition.lcdui.Image createPlain() -> b
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void paintContentImpl(int,int,int,int,javax.microedition.lcdui.Graphics) -> c
    void setStyle(de.enough.polish.ui.Style) -> a
    void select(boolean) -> a
de.enough.polish.ui.ClippingRegion -> am:
    int leftX -> a
    int topY -> b
    int rightX -> c
    int bottomY -> d
    boolean containsRegion -> a
    void reset() -> a
    void addRegion(int,int,int,int) -> a
    boolean containsRegion() -> a
    int getX() -> a
    int getY() -> b
    int getWidth() -> c
    int getHeight() -> d
    java.lang.String toString() -> toString
de.enough.polish.ui.Color -> cn:
    int argb -> a
    boolean isDynamic -> a
    java.lang.Integer integer -> a
    java.lang.Integer getInteger() -> a
    int getColor() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.Command -> ai:
    java.lang.String longLabel -> a
    int commandType -> a
    int priority -> b
    de.enough.polish.util.IdentityArrayList children -> a
    de.enough.polish.ui.Style style -> a
    java.lang.String label -> b
    de.enough.polish.ui.ItemCommandListener itemCommandListener -> a
    de.enough.polish.ui.CommandListener commandListener -> a
    int getValidType(int) -> a
    java.lang.String getValidLabel(java.lang.String) -> a
    java.lang.String getLabel() -> getLabel
    java.lang.String getLongLabel() -> getLongLabel
    int getCommandType() -> getCommandType
    int getPriority() -> getPriority
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean commandAction(de.enough.polish.ui.Item,de.enough.polish.ui.Displayable) -> a
    de.enough.polish.ui.Style getStyle() -> a
    boolean hasSubCommands() -> a
    java.lang.Object[] getSubCommmandsArray() -> a
de.enough.polish.ui.CommandItem -> d:
    de.enough.polish.ui.Command command -> a
    de.enough.polish.ui.Container children -> a
    boolean hasChildren -> a
    int childIndicatorWidth -> h
    int childIndicatorYOffset -> P
    int childIndicatorHeight -> Q
    int childIndicatorColor -> R
    boolean isOpen -> c
    void addChild(de.enough.polish.ui.Command,de.enough.polish.ui.Style) -> a
    void addChild(de.enough.polish.ui.CommandItem) -> a
    int getLayer() -> a
    void initContent(int,int,int) -> a
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void paintChildren(int,int,int,int,javax.microedition.lcdui.Graphics) -> a_
    boolean handleKeyPressed(int,int) -> a
    boolean handleKeyReleased(int,int) -> b
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerReleased(int,int) -> d
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    void open(boolean) -> a
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    void hideNotify() -> a
    boolean isInItemArea(int,int) -> e
    void defocus(de.enough.polish.ui.Style) -> b
de.enough.polish.ui.CommandListener -> ah:
    void commandAction(de.enough.polish.ui.Command,de.enough.polish.ui.Displayable) -> a
de.enough.polish.ui.Container -> w:
    de.enough.polish.util.ArrayList itemsList -> a
    boolean autoFocusEnabled -> a
    int autoFocusIndex -> a
    de.enough.polish.ui.Style itemStyle -> a
    de.enough.polish.ui.Item focusedItem -> a
    int focusedIndex -> b
    boolean enableScrolling -> b
    boolean allowCycling -> c
    int yOffset -> c
    int targetYOffset -> d
    int focusedTopMargin -> h
    de.enough.polish.ui.ContainerView containerView -> a
    int lastPointerPressY -> e
    int lastPointerPressYOffset -> f
    long lastPointerPressTime -> a
    boolean isScrollRequired -> e
    int scrollHeight -> g
    de.enough.polish.ui.Item[] containerItems -> a
    boolean showCommandsHasBeenCalled -> f
    de.enough.polish.ui.Item scrollItem -> c
    de.enough.polish.ui.Style plainStyle -> b
    boolean isIgnoreMargins -> q
    boolean appearanceModeSet -> d
    int scrollDirection -> P
    int scrollSpeed -> Q
    int scrollDamping -> R
    long lastAnimationTime -> b
    boolean isScrolling -> r
    de.enough.polish.ui.FocusListener focusListener -> a
    void setScrollHeight(int) -> b
    int getScrollHeight() -> a
    int getContentScrollHeight() -> b
    void add(de.enough.polish.ui.Item) -> a
    void add(int,de.enough.polish.ui.Item) -> a
    de.enough.polish.ui.Item get(int) -> a
    de.enough.polish.ui.Item remove(int) -> b
    boolean focusClosestItem(int) -> a
    int size() -> c
    de.enough.polish.ui.Item[] getItems() -> a
    boolean focusChild(int) -> b
    void focusChild(int,de.enough.polish.ui.Item,int,boolean) -> a
    int getChildWidth(de.enough.polish.ui.Item) -> a
    de.enough.polish.ui.Style getFocusedStyle(int,de.enough.polish.ui.Item) -> a
    boolean scroll(int,de.enough.polish.ui.Item,boolean) -> a
    boolean scroll(int,int,int,int,int,boolean) -> a
    void initLayout(de.enough.polish.ui.Style,int) -> a
    void initContent(int,int,int) -> a
    void updateInternalPosition(de.enough.polish.ui.Item) -> b
    void setContentWidth(int) -> a
    void setItemWidth(int) -> c
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void paintBackgroundAndBorder(int,int,int,int,javax.microedition.lcdui.Graphics) -> b
    boolean handleKeyPressed(int,int) -> a
    boolean handleNavigate(int,int) -> g
    boolean handleKeyReleased(int,int) -> b
    boolean handleKeyRepeated(int,int) -> f
    boolean shiftFocus(boolean,int) -> a
    int getFocusedIndex() -> d
    de.enough.polish.ui.Item getFocusedItem() -> a
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyleWithBackground(de.enough.polish.ui.Style,boolean) -> b
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    de.enough.polish.ui.Style focus(de.enough.polish.ui.Style,int) -> a
    void defocus(de.enough.polish.ui.Style) -> b
    void showCommands() -> a_
    boolean handleCommand(de.enough.polish.ui.Command) -> a_
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    void addRepaintArea(de.enough.polish.ui.ClippingRegion) -> a
    void showNotify() -> c
    void hideNotify() -> a
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerScrollReleased(int,int) -> h
    boolean handlePointerReleased(int,int) -> d
    boolean handlePointerDragged(int,int) -> i
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    int getItemAreaHeight() -> e
    de.enough.polish.ui.Item getChildAt(int,int) -> a
    de.enough.polish.ui.Item getChildAtImpl(int,int) -> b
    int getScrollYOffset() -> f
    int getRelativeScrollYOffset() -> g
    void setScrollYOffset(int) -> d
    void setScrollYOffset(int,boolean) -> a
    void startScroll(int,int,int) -> c
    int getNumberOfInteractiveItems() -> h
    boolean isInItemArea(int,int) -> e
    void initMargin(de.enough.polish.ui.Style,int) -> b
    void onScreenSizeChanged(int,int) -> a
de.enough.polish.ui.ContainerView -> co:
    int xOffset -> h
    int targetXOffset -> i
    int yOffset -> j
    int focusedIndex -> k
    de.enough.polish.ui.Container parentContainer -> a
    boolean restartAnimation -> d
    boolean focusFirstElement -> e
    int appearanceMode -> l
    de.enough.polish.ui.Item focusedItem -> b
    int columnsSetting -> m
    int numberOfColumns -> n
    de.enough.polish.ui.Dimension[] columnsWidths -> a
    int[] rowsHeights -> a
    int numberOfRows -> o
    boolean allowCycling -> f
    boolean allowsAutoTraversal -> g
    boolean isHorizontal -> h
    boolean isVertical -> i
    boolean allowsDirectSelectionByPointerEvent -> j
    int lastAvailableContentWidth -> p
    int scrollDirection -> q
    int scrollSpeed -> r
    int scrollDamping -> s
    long lastAnimationTime -> a
    long lastPointerPressTime -> b
    int lastPointerPressXOffset -> t
    boolean isPointerPressedHandled -> k
    int pointerPressedX -> u
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    void setScrollXOffset(int,boolean) -> a
    int getScrollXOffset() -> a
    void addFullRepaintRegion(de.enough.polish.ui.Item,de.enough.polish.ui.ClippingRegion) -> a
    void initContent(de.enough.polish.ui.Item,int,int,int) -> b
    boolean isLayoutExpand() -> b
    void paintContent(de.enough.polish.ui.Item,int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void paintContent(de.enough.polish.ui.Container,de.enough.polish.ui.Item[],int,int,int,int,int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void paintItem(de.enough.polish.ui.Item,int,int,int,int,int,int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    de.enough.polish.ui.Item getNextItem(int,int) -> a
    de.enough.polish.ui.Item shiftFocus(boolean,int,de.enough.polish.ui.Item[],boolean,int) -> a
    boolean isInBottomRow(int) -> a
    void focusItem(int,de.enough.polish.ui.Item) -> a
    void focusItem(int,de.enough.polish.ui.Item,int) -> a
    void setStyle(de.enough.polish.ui.Style) -> b
    void showNotify() -> a
    de.enough.polish.ui.Screen getScreen() -> a
    boolean handleKeyPressed(int,int) -> a
    boolean handlePointerPressed(int,int) -> c
    void initHorizontalScrolling(int,int) -> b
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    boolean handlePointerReleased(int,int) -> d
    boolean startHorizontalScroll(int,int) -> f
    de.enough.polish.ui.Style focusItem(int,de.enough.polish.ui.Item,int,de.enough.polish.ui.Style) -> a
    boolean isVirtualContainer() -> c
    void startScroll(int,int,int) -> a
    de.enough.polish.ui.Item getChildAt(int,int) -> b
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.CycleListener -> q:
    boolean onCycle(de.enough.polish.ui.Item,int) -> a
de.enough.polish.ui.Dimension -> dm:
    int unit -> a
    int value -> b
    boolean isPercent -> a
    int factor -> c
    java.lang.String valueAsString -> a
    int getValue(int) -> a
    boolean isPercent() -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
    void resolve() -> a
    boolean parseNumberValue(java.lang.String) -> a
de.enough.polish.ui.Display -> ay:
    de.enough.polish.ui.Display instance -> a
    de.enough.polish.ui.Displayable currentDisplayable -> a
    de.enough.polish.ui.Canvas currentCanvas -> a
    javax.microedition.midlet.MIDlet midlet -> a
    de.enough.polish.ui.NativeDisplay nativeDisplay -> a
    int screenWidth -> b
    int screenHeight -> c
    boolean isIgnoreReleasedEvent -> c
    boolean enableScreenChangeAnimations -> a
    boolean showInfo -> d
    int currentInfoColor -> d
    de.enough.polish.ui.Displayable infoNextDisplayable -> b
    long infoStartTime -> a
    int keyRepeatCurrentKeyCode -> e
    int keyRepeatBugCounter -> f
    boolean keyRepeatBugCounterResetDone -> e
    boolean ignoreShowHide -> f
    de.enough.polish.ui.CommandListener commandListener -> a
    int nonFullScreenHeight -> a
    int inputMethod -> g
    boolean emitNotifyOnUserEvent -> g
    boolean isLastEventProcessed -> b
    de.enough.polish.ui.Displayable nextOrCurrentDisplayable -> c
    boolean hasBeenShown -> h
    de.enough.polish.ui.Display getDisplay(javax.microedition.midlet.MIDlet) -> a
    int getColor(int) -> a
    de.enough.polish.ui.Displayable getCurrent() -> a
    void setCurrent(de.enough.polish.ui.Displayable) -> a
    boolean flashBacklight(int) -> a
    boolean isSoftKeyLeft(int,int) -> a
    boolean isSoftKeyRight(int,int) -> b
    boolean isSoftKeyMiddle(int,int) -> c
    boolean isSoftKey(int,int) -> d
    int getGameAction(int) -> getGameAction
    void paint(javax.microedition.lcdui.Graphics) -> paint
    de.enough.polish.ui.Display getInstance() -> a
    void _setFullScreenMode(boolean) -> a
    void setCommandListener(de.enough.polish.ui.CommandListener) -> a
    void hideNotify() -> hideNotify
    void showNotify() -> showNotify
    void keyPressed(int) -> keyPressed
    void keyRepeated(int) -> keyRepeated
    void keyReleased(int) -> keyReleased
    void pointerPressed(int,int) -> pointerPressed
    void pointerReleased(int,int) -> pointerReleased
    void pointerDragged(int,int) -> pointerDragged
    void sizeChanged(int,int) -> sizeChanged
    void sizeChanged(int,int,boolean) -> a
    int getScreenHeight() -> a
    int getScreenWidth() -> b
    void requestRepaint(int,int,int,int) -> a
    void requestRepaint() -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    void toggleScreen() -> b
    void run() -> run
    void emitNotifyOnUserEvents(boolean) -> b
    void setInputMethod(int) -> a
    int access$002(de.enough.polish.ui.Display,int) -> a
    boolean access$102(de.enough.polish.ui.Display,boolean) -> a
de.enough.polish.ui.Display$1 -> as:
    de.enough.polish.ui.Display this$0 -> a
    void run() -> run
de.enough.polish.ui.Display$2 -> ar:
    void paint(javax.microedition.lcdui.Graphics) -> paint
de.enough.polish.ui.Display$3 -> aq:
    void paint(javax.microedition.lcdui.Graphics) -> paint
de.enough.polish.ui.Display$WrapperCanvas -> c:
    de.enough.polish.ui.Display this$0 -> a
    void showNotify() -> showNotify
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void keyPressed(int) -> keyPressed
    void keyReleased(int) -> keyReleased
    void keyRepeated(int) -> keyRepeated
    void pointerDragged(int,int) -> pointerDragged
    void pointerPressed(int,int) -> pointerPressed
    void pointerReleased(int,int) -> pointerReleased
de.enough.polish.ui.Displayable -> j:
    void sizeChanged(int,int) -> a
de.enough.polish.ui.FocusListener -> b:
    void onFocusChanged(de.enough.polish.ui.Container,de.enough.polish.ui.Item,int) -> a
de.enough.polish.ui.Gauge -> ae:
    int ANIMATION_MODE_BACKANDFORTH -> a
    int value -> b
    java.lang.String valueString -> a
    int maxValue -> c
    boolean isInteractive -> a
    int color -> d
    int mode -> e
    int chunkWidth -> f
    int gapWidth -> g
    int gapColor -> h
    javax.microedition.lcdui.Image image -> a
    int imageYOffset -> P
    javax.microedition.lcdui.Image indicatorImage -> b
    boolean isIndefinite -> b
    int indefinitePos -> Q
    boolean showValue -> c
    int fontColor -> R
    javax.microedition.lcdui.Font font -> a
    int valueWidth -> S
    int valuePosition -> T
    void setValue(int) -> b
    void createIndicatorImage() -> k
    void updateIndefiniteIndicatorImage() -> l
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void initContent(int,int,int) -> a
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    boolean handleKeyPressed(int,int) -> a
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    boolean animate() -> a
    void hideNotify() -> a
    void showNotify() -> c
de.enough.polish.ui.IconItem -> ab:
    javax.microedition.lcdui.Image image -> a
    int imageAlign -> b
    int imageHeight -> c
    int imageWidth -> d
    int yAdjustText -> e
    boolean isTextVisible -> d
    int relativeIconX -> f
    int relativeIconY -> g
    javax.microedition.lcdui.Image imageHover -> b
    javax.microedition.lcdui.Image imageNormal -> c
    void initContent(int,int,int) -> a
    void setContentWidth(int) -> a
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    void setImage(javax.microedition.lcdui.Image) -> a
    void setImage(javax.microedition.lcdui.Image,de.enough.polish.ui.Style) -> a
    void setImageAlign(int) -> b
    void defocus(de.enough.polish.ui.Style) -> b
    de.enough.polish.ui.Style focus(de.enough.polish.ui.Style,int) -> a
de.enough.polish.ui.Item -> au:
    de.enough.polish.util.ArrayList COMMANDS -> a
    int layout -> i
    de.enough.polish.ui.ItemCommandListener itemCommandListener -> a
    de.enough.polish.ui.Command defaultCommand -> d
    int preferredWidth -> j
    int preferredHeight -> k
    de.enough.polish.ui.Dimension minimumWidth -> a
    boolean isInitialized -> g
    de.enough.polish.ui.Background background -> b
    de.enough.polish.ui.Border border -> a
    de.enough.polish.ui.Style style -> c
    int itemWidth -> l
    int itemHeight -> m
    int paddingLeft -> n
    int paddingTop -> o
    int paddingRight -> p
    int paddingBottom -> q
    int paddingVertical -> r
    int paddingHorizontal -> s
    int marginLeft -> t
    int marginTop -> u
    int marginRight -> v
    int marginBottom -> w
    int contentWidth -> x
    int contentHeight -> y
    int availContentWidth -> z
    int availContentHeight -> A
    int backgroundWidth -> B
    int backgroundHeight -> C
    int appearanceMode -> D
    de.enough.polish.ui.Screen screen -> a
    boolean isStyleInitialised -> h
    de.enough.polish.ui.Item parent -> b
    de.enough.polish.util.ArrayList commands -> b
    boolean isLayoutCenter -> i
    boolean isLayoutExpand -> j
    boolean isLayoutRight -> k
    int relativeX -> E
    int relativeY -> F
    int contentX -> G
    int contentY -> H
    int internalX -> I
    int internalY -> J
    int internalWidth -> K
    int internalHeight -> L
    boolean isFocused -> l
    de.enough.polish.ui.Style labelStyle -> d
    de.enough.polish.ui.StringItem label -> a
    boolean useSingleRow -> m
    de.enough.polish.ui.Style focusedStyle -> e
    boolean isPressed -> n
    int backgroundYOffset -> M
    boolean isShown -> o
    de.enough.polish.ui.ItemStateListener itemStateListener -> a
    int availableWidth -> N
    int availableHeight -> O
    boolean ignoreRepaintRequests -> p
    boolean preserveBackground -> a
    boolean preserveBorder -> b
    de.enough.polish.ui.CycleListener cycleListener -> a
    void setLabel(java.lang.String) -> b
    void setLayout(int) -> e
    int getAppearanceMode() -> i
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    int getItemWidth(int,int,int) -> a
    int getItemHeight(int,int,int) -> b
    void addCommand(de.enough.polish.ui.Command) -> a
    void addCommand(de.enough.polish.ui.Command,de.enough.polish.ui.Style) -> a_
    void removeCommand(de.enough.polish.ui.Command) -> b
    void repaintFully() -> d
    void repaint() -> e
    int getBorderWidthLeft() -> j
    int getBorderWidthRight() -> k
    int getBorderWidthTop() -> l
    int getBorderWidthBottom() -> m
    void repaint(int,int,int,int) -> a
    void requestInit() -> f
    de.enough.polish.ui.Screen getScreen() -> a
    void setItemCommandListener(de.enough.polish.ui.ItemCommandListener) -> a
    void setDefaultCommand(de.enough.polish.ui.Command) -> c
    void notifyStateChanged() -> g
    void notifyValueChanged(java.lang.Object) -> a
    void setAvailableDimensions(int,int) -> b
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> d
    void paintBackgroundAndBorder(int,int,int,int,javax.microedition.lcdui.Graphics) -> b
    void paintBorder(int,int,int,int,javax.microedition.lcdui.Graphics) -> e
    void paintBackground(int,int,int,int,javax.microedition.lcdui.Graphics) -> f
    void init(int,int,int) -> b
    void initLayout(de.enough.polish.ui.Style,int) -> a
    void initMargin(de.enough.polish.ui.Style,int) -> b
    void initPadding(de.enough.polish.ui.Style,int) -> c
    void setContentWidth(int) -> a
    void initContent(int,int,int) -> a
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    boolean handleKeyPressed(int,int) -> a
    boolean handleKeyRepeated(int,int) -> f
    boolean handleKeyReleased(int,int) -> b
    void notifyVisited() -> h
    boolean notifyItemPressedStart() -> b
    boolean isFocused() -> c
    void notifyItemPressedEnd() -> i
    boolean isInContentArea(int,int) -> j
    boolean isInContentWithPaddingArea(int,int) -> k
    boolean isInItemArea(int,int) -> e
    boolean isInItemArea(int,int,de.enough.polish.ui.Item) -> a
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerReleased(int,int) -> d
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    boolean handlePointerDragged(int,int) -> i
    void addRepaintArea(de.enough.polish.ui.ClippingRegion) -> a
    void addRelativeToBackgroundRegion(de.enough.polish.ui.ClippingRegion,int,int,int,int) -> a
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    boolean animate() -> a
    de.enough.polish.ui.Style getFocusedStyle() -> b
    void handleOnFocusSoftKeyboardDisplayBehavior() -> j
    de.enough.polish.ui.Style focus(de.enough.polish.ui.Style,int) -> a
    void defocus(de.enough.polish.ui.Style) -> b
    void showCommands() -> a_
    void addCommands(de.enough.polish.util.ArrayList) -> a
    boolean handleCommand(de.enough.polish.ui.Command) -> a_
    void showNotify() -> c
    void hideNotify() -> a
    int getAbsoluteX() -> n
    int getAbsoluteY() -> o
    int getItemAreaHeight() -> e
    int getBackgroundX() -> p
    int getBackgroundY() -> q
    de.enough.polish.ui.Command getDefaultCommand() -> a
    void setInitialized(boolean) -> b
    boolean isInitialized() -> d
    void setItemHeight(int) -> f
    void setItemWidth(int) -> c
    boolean isLayoutRight() -> e
    boolean isLayoutLeft() -> f
    boolean isLayoutCenter() -> g
    boolean isLayoutBottom() -> h
    boolean isLayoutVerticalCenter() -> i
    boolean isLayoutVerticalExpand() -> j
    boolean isLayoutNewlineAfter() -> k
    boolean isLayoutNewlineBefore() -> l
    void onScreenSizeChanged(int,int) -> a
    boolean fireContinueCycle(int) -> c
de.enough.polish.ui.ItemCommandListener -> aa:
    void commandAction(de.enough.polish.ui.Command,de.enough.polish.ui.Item) -> a
de.enough.polish.ui.ItemStateListener -> k:
    void itemStateChanged(de.enough.polish.ui.Item) -> a
de.enough.polish.ui.ItemView -> dy:
    int contentWidth -> a
    int contentHeight -> b
    int availableWidth -> c
    int availableHeight -> d
    int paddingVertical -> e
    int paddingHorizontal -> f
    int layout -> g
    boolean isLayoutCenter -> a
    boolean isLayoutRight -> b
    de.enough.polish.ui.Item parentItem -> a
    boolean isFocused -> c
    void init(de.enough.polish.ui.Item,int,int,int) -> a
    void initContent(de.enough.polish.ui.Item,int,int,int) -> b
    void focus(de.enough.polish.ui.Style,int) -> a
    void defocus(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style) -> b
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    void addFullRepaintRegion(de.enough.polish.ui.Item,de.enough.polish.ui.ClippingRegion) -> a
    boolean animate() -> a
    void showNotify() -> a
    void hideNotify() -> b
    de.enough.polish.ui.Screen getScreen() -> a
    boolean handleKeyPressed(int,int) -> a
    boolean handleKeyReleased(int,int) -> b
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerReleased(int,int) -> d
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    boolean handlePointerDragged(int,int) -> e
    void paintBackground(de.enough.polish.ui.Background,int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void paintBorder(de.enough.polish.ui.Border,int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void setContentWidth(int) -> a
    void onScreenSizeChanged(int,int) -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.List -> an:
    de.enough.polish.ui.Command SELECT_COMMAND -> a
    de.enough.polish.ui.Command selectCommand -> b
    int listType -> r
    de.enough.polish.ui.ChoiceGroup choiceGroup -> a
    int append(java.lang.String,javax.microedition.lcdui.Image,de.enough.polish.ui.Style) -> a
    int append(de.enough.polish.ui.ChoiceItem) -> a
    void removeCommand(de.enough.polish.ui.Command) -> b
de.enough.polish.ui.MenuBar -> e:
    de.enough.polish.util.IdentityArrayList commandsList -> a
    de.enough.polish.ui.Container commandsContainer -> a
    boolean isOpened -> a
    de.enough.polish.ui.Command singleLeftCommand -> a
    de.enough.polish.ui.CommandItem singleLeftCommandItem -> a
    de.enough.polish.ui.Command singleRightCommand -> b
    de.enough.polish.ui.CommandItem singleRightCommandItem -> b
    de.enough.polish.ui.Command singleMiddleCommand -> c
    int topY -> a
    boolean isSoftKeyPressed -> b
    boolean canScrollDownwards -> c
    boolean canScrollUpwards -> d
    boolean paintScrollIndicator -> e
    javax.microedition.lcdui.Image optionsImage -> a
    boolean showImageAndText -> f
    javax.microedition.lcdui.Image selectImage -> b
    javax.microedition.lcdui.Image cancelImage -> c
    de.enough.polish.ui.Background overlayBackground -> a
    de.enough.polish.util.HashMap allCommands -> a
    de.enough.polish.ui.Style menuItemStyle -> a
    int screenHeight -> b
    java.lang.String OPTIONS_CMD_TXT -> a
    java.lang.String SELECT_CMD_TXT -> b
    java.lang.String CANCEL_CMD_TXT -> c
    void addCommand(de.enough.polish.ui.Command) -> a
    void addCommand(de.enough.polish.ui.Command,de.enough.polish.ui.Style) -> a_
    void removeCommand(de.enough.polish.ui.Command) -> b
    int getNextNegativeOrPositiveCommandIndex(boolean) -> a
    void onScreenSizeChanged(int,int) -> a
    void init(int,int,int) -> b
    void initContent(int,int,int) -> a
    void setupCommandMenuItem(de.enough.polish.ui.IconItem,java.lang.String,javax.microedition.lcdui.Image) -> a
    java.lang.String getMenuOptionsText() -> a
    java.lang.String getMenuSelectText() -> b
    java.lang.String getMenuCancelText() -> c
    void paintBackgroundAndBorder(int,int,int,int,javax.microedition.lcdui.Graphics) -> b
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void setOpen(boolean) -> a
    boolean handleKeyPressed(int,int) -> a
    de.enough.polish.ui.CommandItem getOpenOptionsItem() -> a
    de.enough.polish.ui.CommandItem getCloseOptionsItem() -> b
    boolean isOpenOptionsMenuKey(int,int) -> g
    boolean isCloseOptionsMenuKey(int,int) -> h
    boolean isSelectOptionsMenuKey(int,int) -> l
    void notifyKeyPressed() -> b
    boolean handleKeyReleased(int,int) -> b
    boolean handleKeyRepeated(int,int) -> f
    boolean isInMenubar(int) -> a
    boolean handlePointerPressed(int,int) -> c
    boolean handlePointerReleased(int,int) -> d
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    void setStyle(de.enough.polish.ui.Style) -> a
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    void addCommand(de.enough.polish.ui.CommandItem) -> a
    int getSpaceBottom(int,int) -> a
    int size() -> a
    de.enough.polish.ui.Style getMenuItemStyle() -> a
    boolean contains(de.enough.polish.ui.Command) -> a
    void hideNotify() -> a
    void showNotify() -> c
de.enough.polish.ui.NativeDisplay -> p:
    int getColor(int) -> a
    void setCurrent(de.enough.polish.ui.Display) -> a
    void setCurrent(de.enough.polish.ui.Displayable) -> a
    void callSerially(java.lang.Runnable) -> a
    boolean flashBacklight(int) -> a
de.enough.polish.ui.Screen -> ak:
    de.enough.polish.ui.Item title -> a
    boolean excludeTitleForBackground -> g
    de.enough.polish.ui.Item subTitle -> c
    int subTitleHeight -> a
    int titleHeight -> b
    de.enough.polish.ui.Background background -> a
    int backgroundX -> c
    int backgroundY -> d
    int backgroundWidth -> e
    int backgroundHeight -> f
    de.enough.polish.ui.Border border -> a
    de.enough.polish.ui.Style style -> a
    int screenHeight -> g
    int originalScreenHeight -> h
    int screenWidth -> i
    de.enough.polish.ui.Screen$ForwardCommandListener forwardCommandListener -> a
    de.enough.polish.ui.Container container -> a
    boolean isLayoutCenter -> h
    boolean isLayoutRight -> i
    boolean isLayoutVCenter -> j
    boolean isLayoutBottom -> k
    boolean isLayoutHorizontalShrink -> l
    boolean isLayoutVerticalShrink -> m
    boolean isInitialized -> a
    int fullScreenHeight -> j
    int menuBarHeight -> k
    de.enough.polish.ui.Command okCommand -> a
    de.enough.polish.ui.MenuBar menuBar -> a
    de.enough.polish.ui.Item focusedItem -> b
    boolean paintScrollIndicator -> n
    boolean paintScrollIndicatorUp -> o
    boolean paintScrollIndicatorDown -> p
    int scrollIndicatorColor -> r
    int scrollIndicatorX -> s
    int scrollIndicatorY -> t
    int scrollIndicatorWidth -> u
    int scrollIndicatorHeight -> v
    boolean showTitleOrMenu -> q
    de.enough.polish.ui.Item infoItem -> d
    int infoHeight -> l
    int contentX -> m
    int contentY -> n
    int contentWidth -> o
    int contentHeight -> p
    int marginLeft -> w
    int marginRight -> x
    int marginTop -> y
    int marginBottom -> z
    de.enough.polish.ui.ScreenStateListener screenStateListener -> a
    boolean isScreenChangeDirtyFlag -> r
    de.enough.polish.ui.ItemStateListener itemStateListener -> a
    java.lang.Object paintLock -> a
    de.enough.polish.util.ArrayList itemCommands -> a
    long lastInteractionTime -> a
    boolean ignoreRepaintRequests -> b
    boolean isRepaintRequested -> c
    boolean isInitRequested -> d
    de.enough.polish.ui.CommandListener realCommandListener -> a
    boolean isResourcesReleased -> s
    int triggerReleasedKeyCode -> q
    long triggerReleasedTime -> b
    long lastAnimateTime -> c
    boolean isAnimated -> e
    int keyStates -> A
    int releasedKeys -> B
    de.enough.polish.ui.ClippingRegion userEventRepaintRegion -> a
    de.enough.polish.ui.ScreenInitializerListener screenInitializerListener -> a
    void init(int,int) -> b
    void requestInit() -> b
    void requestRepaint() -> c
    void requestRepaint(int,int,int,int) -> a
    void calculateContentArea(int,int,int,int) -> b
    void adjustContentArea(int,int,int,int,de.enough.polish.ui.Container) -> a
    void initContent(de.enough.polish.ui.Container) -> a
    void showNotify() -> a
    void hideNotify() -> d
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
    void animate(long,de.enough.polish.ui.ClippingRegion) -> a
    boolean animate() -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
    void paintScrollBar(javax.microedition.lcdui.Graphics) -> b
    void paintMenuBar(javax.microedition.lcdui.Graphics) -> c
    void paintTitleAndSubtitle(javax.microedition.lcdui.Graphics) -> d
    void paintBackgroundAndBorder(javax.microedition.lcdui.Graphics) -> e
    void paintScreen(javax.microedition.lcdui.Graphics) -> f
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> b
    void setTitle(java.lang.String,de.enough.polish.ui.Style) -> b
    boolean _keyPressed(int) -> a
    boolean _keyRepeated(int) -> b
    boolean _keyReleased(int) -> c
    de.enough.polish.ui.Item[] getRootItems() -> a
    boolean handleKeyPressed(int,int) -> a
    boolean handleKeyRepeated(int,int) -> b
    boolean handleKeyReleased(int,int) -> c
    void notifyScreenStateChanged() -> e
    void setCommandListener(de.enough.polish.ui.CommandListener) -> a
    void addCommand(de.enough.polish.ui.Command) -> a
    void addCommand(de.enough.polish.ui.Command,de.enough.polish.ui.Style) -> a
    void removeCommand(de.enough.polish.ui.Command) -> b
    void initMenuBar() -> m
    void setItemCommands(de.enough.polish.util.ArrayList,de.enough.polish.ui.Item) -> a
    void notifyDefaultCommand(de.enough.polish.ui.Command) -> c
    void clearItemCommands() -> f
    void removeItemCommands(de.enough.polish.ui.Item) -> a
    void callCommandListener(de.enough.polish.ui.Command) -> d
    boolean _pointerPressed(int,int) -> d
    boolean _pointerDragged(int,int) -> e
    boolean _pointerReleased(int,int) -> f
    boolean handlePointerPressed(int,int) -> g
    boolean handlePointerReleased(int,int) -> h
    boolean handlePointerDragged(int,int,de.enough.polish.ui.ClippingRegion) -> a
    boolean handlePointerDragged(int,int) -> i
    boolean handleCommand(de.enough.polish.ui.Command) -> a
    void setFullScreenMode(boolean) -> a
    void sizeChanged(int,int) -> a
    int getScreenHeight() -> a
    de.enough.polish.ui.Item getCurrentItem() -> a
    boolean isMenuOpened() -> b
    void notifyStateListener(de.enough.polish.ui.Item) -> b
    int getScrollBarWidth() -> b
    int getScreenFullHeight() -> c
    int getScreenFullWidth() -> d
    int getScrollYOffset() -> e
    void setScrollYOffset(int,boolean) -> a
    boolean isGameActionFire(int,int) -> j
    boolean isSoftKeyLeft(int,int) -> k
    boolean isSoftKeyRight(int,int) -> l
    boolean isSoftKey(int,int) -> m
    de.enough.polish.ui.Container getRootContainer() -> a
    int getTitleHeight() -> f
de.enough.polish.ui.Screen$ForwardCommandListener -> z:
    de.enough.polish.ui.Screen this$0 -> a
    void commandAction(de.enough.polish.ui.Command,de.enough.polish.ui.Displayable) -> a
de.enough.polish.ui.ScreenInitializerListener -> o:
    void notifyScreenInitialized(de.enough.polish.ui.Screen) -> a
    void adjustContentArea(de.enough.polish.ui.Screen) -> b
de.enough.polish.ui.ScreenStateListener -> ax:
    void screenStateChanged(de.enough.polish.ui.Screen) -> a
de.enough.polish.ui.SimpleScreenHistory -> af:
    de.enough.polish.util.ArrayList history -> a
    int maxStep -> a
    de.enough.polish.ui.Display display -> a
    boolean hasPrevious() -> a
    boolean showPrevious() -> b
de.enough.polish.ui.StringItem -> f:
    java.lang.String text -> a
    de.enough.polish.util.WrappedText textLines -> a
    int textColor -> a
    javax.microedition.lcdui.Font font -> a
    boolean isTextInitializationRequired -> b
    int lastAvailableContentWidth -> b
    int lastContentWidth -> c
    int lastContentHeight -> d
    java.lang.String getText() -> a
    void setText(java.lang.String) -> a
    void setText(java.lang.String,de.enough.polish.ui.Style) -> a
    javax.microedition.lcdui.Font getFont() -> a
    void paintContent(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void drawString(java.lang.String,int,int,int,javax.microedition.lcdui.Graphics) -> a
    int getLineHeight() -> b
    int getFontHeight() -> c
    void initContent(int,int,int) -> a
    void wrap(java.lang.String,int,int) -> a
    int calculateLinesHeight(de.enough.polish.util.WrappedText,int) -> a
    void setContentWidth(int) -> a
    void setStyle(de.enough.polish.ui.Style) -> a
    void setStyle(de.enough.polish.ui.Style,boolean) -> a
de.enough.polish.ui.Style -> en:
    java.lang.Boolean TRUE -> a
    java.lang.Boolean FALSE -> b
    java.lang.String name -> a
    de.enough.polish.ui.Background background -> a
    de.enough.polish.ui.Border border -> a
    javax.microedition.lcdui.Font font -> a
    int layout -> a
    short[] attributeKeys -> a
    java.lang.Object[] attributeValues -> a
    java.lang.String getProperty(int) -> a
    java.lang.Object getObjectProperty(int) -> a
    java.lang.Integer getIntProperty(int) -> a
    de.enough.polish.ui.Color getColorProperty(int) -> a
    void releaseResources() -> a
    int getFontColor() -> a
    javax.microedition.lcdui.Font getFont() -> a
    int getMargin(de.enough.polish.ui.Dimension,int) -> a
    int getMarginLeft(int) -> a
    int getMarginRight(int) -> b
    int getMarginTop(int) -> c
    int getMarginBottom(int) -> d
    int getPadding(de.enough.polish.ui.Dimension,int) -> b
    int getPaddingLeft(int) -> e
    int getPaddingRight(int) -> f
    int getPaddingTop(int) -> g
    int getPaddingBottom(int) -> h
    int getPaddingHorizontal(int) -> i
    int getPaddingVertical(int) -> j
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
    java.lang.String toString() -> toString
de.enough.polish.ui.StyleSheet -> y:
    java.util.Hashtable imagesByName -> a
    de.enough.polish.ui.Background defaultBackground -> a
    de.enough.polish.ui.Border defaultBorder -> a
    de.enough.polish.ui.Style defaultStyle -> a
    de.enough.polish.ui.Style menu1Style -> b
    de.enough.polish.ui.Style browsertextbolditalicStyle -> c
    de.enough.polish.ui.Style browsertextboldStyle -> d
    de.enough.polish.ui.Style browsertextitalicStyle -> e
    de.enough.polish.ui.Style menubarStyle -> f
    de.enough.polish.ui.Style titleStyle -> g
    de.enough.polish.ui.Style browseroptionStyle -> h
    de.enough.polish.ui.Style leftcommandStyle -> i
    de.enough.polish.ui.Style browseroptionitemStyle -> j
    de.enough.polish.ui.Style browserStyle -> k
    de.enough.polish.ui.Style rssdescriptionalertStyle -> l
    de.enough.polish.ui.Style browsertextStyle -> m
    de.enough.polish.ui.Style menuStyle -> n
    de.enough.polish.ui.Style browserchoicegroupexclusiveStyle -> o
    de.enough.polish.ui.Style screenmainmenuStyle -> p
    de.enough.polish.ui.Style browserradioStyle -> q
    de.enough.polish.ui.Style browsertextcodeStyle -> r
    de.enough.polish.ui.Style rightcommandStyle -> s
    de.enough.polish.ui.Style browserchoicegroupmultipleStyle -> t
    de.enough.polish.ui.Style browsercheckboxStyle -> u
    de.enough.polish.ui.Style menuitemfocusedStyle -> v
    de.enough.polish.ui.Style itemmainmenuentryfocusedStyle -> w
    de.enough.polish.ui.Style browserlinkfocStyle -> x
    de.enough.polish.ui.Style browserinputfocStyle -> y
    de.enough.polish.ui.Style browserchoicegrouppopupfocusedStyle -> z
    de.enough.polish.ui.Style browserchoicegrouppopupStyle -> A
    de.enough.polish.ui.Style browserinputStyle -> B
    de.enough.polish.ui.Style menuitemStyle -> C
    de.enough.polish.ui.Style browserlinkStyle -> D
    de.enough.polish.ui.Style itemmainmenuentryStyle -> E
    java.util.Hashtable stylesByName -> b
    de.enough.polish.ui.Style labelStyle -> F
    de.enough.polish.ui.Style focusedStyle -> G
    de.enough.polish.ui.Screen currentScreen -> a
    de.enough.polish.ui.Display display -> a
    javax.microedition.midlet.MIDlet midlet -> a
    de.enough.polish.ui.AnimationThread animationThread -> a
    de.enough.polish.ui.Command OK_CMD -> a
    de.enough.polish.ui.Command CANCEL_CMD -> b
    void initStyles0() -> a
    void releaseResources() -> b
de.enough.polish.ui.backgrounds.BorderedRoundRectBackground -> u:
    int color -> b
    int arcWidth -> c
    int arcHeight -> d
    int borderColor -> e
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.backgrounds.BorderedSimpleBackground -> x:
    int color -> b
    de.enough.polish.ui.Color colorObj -> a
    int borderColor -> c
    de.enough.polish.ui.Color borderColorObj -> b
    boolean isInitialized -> a
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.backgrounds.SimpleBackground -> bc:
    int color -> b
    de.enough.polish.ui.Color colorObj -> a
    boolean isInitialized -> a
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.backgrounds.TranslucentSimpleBackground -> bk:
    int argbColor -> b
    int[] buffer -> a
    int lastWidth -> c
    int lastHeight -> d
    boolean needsFullBuffer -> a
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void releaseResources() -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.borders.RoundRectBorder -> cd:
    int color -> e
    int arcWidth -> f
    int arcHeight -> g
    void paint(int,int,int,int,javax.microedition.lcdui.Graphics) -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.ui.splash2.ApplicationInitializer -> ao:
    void initApp() -> d
de.enough.polish.ui.splash2.InitializerSplashScreen -> n:
    de.enough.polish.ui.splash2.ApplicationInitializer initializer -> a
    javax.microedition.lcdui.Image image -> a
    int backgroundColor -> a
    java.lang.String message -> b
    int messageColor -> b
    boolean isStarted -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
    void run() -> run
    void sizeChanged(int,int) -> a
    void showNotify() -> a
de.enough.polish.util.ArrayList -> fj:
    java.lang.Object[] storedObjects -> a
    int growthFactor -> a
    int size -> b
    int size() -> a
    boolean contains(java.lang.Object) -> a
    int indexOf(java.lang.Object) -> a
    java.lang.Object get(int) -> a
    java.lang.Object remove(int) -> b
    boolean remove(java.lang.Object) -> b
    void clear() -> a
    void add(java.lang.Object) -> a
    void add(int,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.Object[] toArray(java.lang.Object[]) -> a
    void increaseCapacity() -> b
    void ensureCapacity(int) -> a
    java.lang.Object[] getInternalArray() -> a
    void addAll(de.enough.polish.util.ArrayList) -> a
    void addAll(java.lang.Object[],int,int) -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.util.DeviceControl -> aj:
    java.lang.Object lightsLock -> a
    java.lang.Object vibrateLock -> b
    boolean lightOff -> a
    boolean fallbackOnGpsDisabled -> b
    void run() -> run
    void switchLightOnFor(int) -> a
    void hideSoftKeyboard() -> a
de.enough.polish.util.DeviceInfo -> a:
    boolean requiresFullRgbArrayForDrawRgb -> a
    boolean requiresFullRgbArrayForDrawRgbResolved -> b
    int resolvedVendor -> a
    int getVendor() -> a
    int resolveVendor() -> b
    boolean requiresFullRgbArrayForDrawRgb() -> a
de.enough.polish.util.DrawUtil -> t:
    int COLOR_BIT_MASK -> a
    byte[][] FILTER_GAUSSIAN_2 -> a
    byte[][] FILTER_GAUSSIAN_3 -> b
    void drawRgb(int[],int,int,int,int,boolean,javax.microedition.lcdui.Graphics) -> a
    void drawRgb(int[],int,int,int,int,boolean,int,int,int,int,javax.microedition.lcdui.Graphics) -> a
de.enough.polish.util.HashMap -> aw:
    int loadFactor -> b
    de.enough.polish.util.HashMap$Element[] buckets -> a
    boolean isPowerOfTwo -> a
    int size -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> b
    int size() -> a
    java.lang.Object[] values() -> a
    java.lang.Object[] values(java.lang.Object[]) -> a
    java.lang.Object[] keys() -> b
    java.lang.Object[] keys(java.lang.Object[]) -> b
    java.lang.String toString() -> toString
    void increaseSize() -> a
de.enough.polish.util.HashMap$Element -> ac:
    java.lang.Object key -> a
    int hashCodeValue -> a
    java.lang.Object value -> b
    de.enough.polish.util.HashMap$Element next -> a
de.enough.polish.util.IdentityArrayList -> fm:
    java.lang.Object[] storedObjects -> a
    int growthFactor -> a
    int size -> b
    int size() -> a
    boolean contains(java.lang.Object) -> a
    int indexOf(java.lang.Object) -> a
    java.lang.Object get(int) -> a
    java.lang.Object remove(int) -> b
    boolean remove(java.lang.Object) -> b
    void clear() -> a
    void add(java.lang.Object) -> a
    void add(int,java.lang.Object) -> a
    java.lang.Object set(int,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.Object[] toArray(java.lang.Object[]) -> a
    void increaseCapacity() -> b
    java.lang.Object[] getInternalArray() -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.util.IntList -> fn:
    int[] storedObjects -> a
    int growthFactor -> a
    int size -> b
    int size() -> a
    int get(int) -> a
    int removeElementAt(int) -> b
    void clear() -> a
    void add(int) -> a
    int set(int,int) -> a
    java.lang.String toString() -> toString
    void increaseCapacity() -> b
    int[] getInternalArray() -> a
    void read(java.io.DataInputStream) -> a
    void write(java.io.DataOutputStream) -> a
de.enough.polish.util.TextUtil -> l:
    java.lang.String[] split(java.lang.String,char) -> a
    java.lang.String[] wrap(java.lang.String,javax.microedition.lcdui.Font,int,int) -> a
    java.lang.String[] wrap(java.lang.String,javax.microedition.lcdui.Font,int,int,int,java.lang.String,int) -> a
    void wrap(java.lang.String,javax.microedition.lcdui.Font,int,int,int,java.lang.String,int,de.enough.polish.util.WrappedText) -> a
    void wrap(java.lang.String,javax.microedition.lcdui.Font,int,int,int,de.enough.polish.util.WrappedText,int,int) -> a
    void addAppendix(javax.microedition.lcdui.Font,int,java.lang.String,int,int,de.enough.polish.util.WrappedText) -> a
de.enough.polish.util.WrappedText -> fv:
    java.lang.String[] lines -> a
    de.enough.polish.util.IdentityArrayList linesList -> a
    int[] lineWidths -> a
    de.enough.polish.util.IntList lineWidthsList -> a
    int maxLineWidth -> a
    void addLine(java.lang.String,int) -> a
    void setLine(int,java.lang.String,int) -> a
    void clear() -> a
    java.lang.String[] getLines() -> a
    java.lang.Object[] getLinesInternalArray() -> a
    int size() -> a
    java.lang.String getLine(int) -> a
    int getLineWidth(int) -> a
    int getMaxLineWidth() -> b
    void removeLine(int) -> a
    void write(java.io.DataOutputStream) -> a
    void read(java.io.DataInputStream) -> a
model.Configuration -> fy:
    boolean isDirty -> a
    java.lang.String userName -> a
    boolean isDirty() -> a
    void write(java.io.DataOutputStream) -> a
    void read(java.io.DataInputStream) -> a
view.MainMenuList -> v:
    void addEntry(java.lang.String) -> a
